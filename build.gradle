plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

ext {
	springCloudVersion = "2023.0.3"
}

allprojects {
	group = 'org.example'
	version = '0.0.1-SNAPSHOT'

	repositories {
		mavenCentral()
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		runtimeOnly 'org.postgresql:postgresql'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

		if(project.name.contains("service")){
			implementation project(':common')
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
		}
	}

}
